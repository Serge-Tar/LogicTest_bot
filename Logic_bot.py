import telebot
import json
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, Message  #–∏–º–ø–æ—Ä—Ç –Ω—É–∂–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
from info_logictest import survey
from config import TOKEN

# –∞–¥—Ä–µ—Å –±–æ—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
#@Logic_testBot

bot = telebot.TeleBot(TOKEN, parse_mode='HTML')

# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (—Å–ª–æ–≤–∞—Ä–µ user_data) –≤ —Ñ–∞–π–ª json —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
def save_user_data(user_id, user_data):
    with open(f"{user_id}_data.json", "w", encoding='utf8') as file:
        json.dump(user_data, file, ensure_ascii=False, indent=2)

# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (—Å–ª–æ–≤–∞—Ä–µ user_data) –≤ —Ñ–∞–π–ª json
def save_user_data(user_data):
    with open("user_data.json", "w", encoding='utf8') as file:
        json.dump(user_data, file, ensure_ascii=False, indent=2)

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏–∑ json —Ñ–∞–π–ª–∞ –≤ —Å–ª–æ–≤–∞—Ä—å user_data —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
def load_user_data(user_id):
    try:
        with open(f"{user_id}_data.json", "r+", encoding='utf8') as file:
            return json.load(file)
    except:
        return {}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏–∑ json —Ñ–∞–π–ª–∞ –≤ —Å–ª–æ–≤–∞—Ä—å user_data
def load_user_data():
    try:
        with open("user_data.json", "r+", encoding='utf8') as file:
            return json.load(file)
    except:
        return {}


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, —Ç–æ —Å—á–∏—Ç—ã–≤–∞–µ–º –∏–∑ –Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é user_data
try:
    file_with_json = open('user_data.json', 'r+', encoding='utf8')  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
    try:
        user_data_file = json.load(file_with_json)  # –°—á–∏—Ç—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ —Å–ª–æ–≤–∞—Ä—å
        user_data = user_data_file # –ï—Å–ª–∏ –≤ —Ñ–∞–π–ª–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, —Ç–æ –ø–µ—Ä–µ–¥–∞–µ–º –∏—Ö –≤ —Å–ª–æ–≤–∞—Ä—å user_data
        print('–ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ user_data_file: ', user_data_file)
    except json.decoder.JSONDecodeError as err:
        user_data = {} # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç, –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å
        print('–ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ user_data_file: –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª')
    file_with_json.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
except FileNotFoundError:
    user_data = {}
    print('–§–∞–π–ª user_data.json –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω!')


print('–ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ user_data:', user_data)


# –ö–Ω–æ–ø–∫–∏
#markup = ReplyKeyboardMarkup(resize_keyboard=True) # –∑–∞–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
#markup.add(KeyboardButton('–ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–æ—á–∫–µ')) # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
#markup.add(KeyboardButton('–í—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–æ—á–∫–µ'))

@bot.message_handler(commands=['start'])
def hello_message(message): # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    global user_data
    user_id = str(message.from_user.id)  # –ü–æ–ª—É—á–∞–µ–º `user_id` –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ str, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ json —Ñ–æ—Ä–º–∞—Ç–µ

    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ–ª–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–ª–æ–≤–∞—Ä—å
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ
    # –ï—Å–ª–∏ –Ω–µ—Ç -- –∑–∞–ø–∏—Å—ã–≤–∞–µ–º
    if user_id in user_data:
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data[user_id]} –µ—Å—Ç—å –≤ –º–æ–µ–π –±–∞–∑–µ!")
    else:
        user_data[(user_id)] = {}
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –Ω–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ")
        user_data[user_id]['user_name'] = message.from_user.username
        user_data[user_id]['user_firstname'] = message.from_user.first_name
        user_data[user_id]['user_lastname'] = message.from_user.last_name
        user_data[user_id]['question_number'] = str(0)
        user_data[user_id]['total_score'] = str(0)
        print(f"–û—Ç–ª–∏—á–Ω–æ, —è –µ–≥–æ {user_data[user_id]} –∑–∞–ø–æ–º–Ω–∏–ª!")
        #–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ user_data –≤ —Ñ–∞–π–ª –≤ json —Ñ–æ—Ä–º–∞—Ç–µ
        file_for_json = open('user_data.json', 'w', encoding='utf8')  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª file_name.json –Ω–∞ —á—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å.–ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ utf8
        json.dump(user_data, file_for_json, ensure_ascii=False, indent=2)  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–µ–≥–æ —Å–ª–æ–≤–∞—Ä—å –≤ JSON-—Ñ–æ—Ä–º–∞—Ç–µ, —Ä–∞–∑—Ä–µ—à–∏–≤ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
        file_for_json.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

    print(f'–ò—Ç–æ–≥–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å: {user_data}')

    # –∑–∞–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞", –¥–ª—è –µ–µ –∑–∞–ø—É—Å–∫–∞
    murkup = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    murkup.add("–í–∏–∫—Ç–æ—Ä–∏–Ω–∞")
#    murkup.add("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É")  # –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ

    #    bot.send_photo(message.chat.id, photo=open('./foto/sti—Åker/ginger_eyes.jpg', 'rb'))
    bot.send_message(message.chat.id, f"<strong>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!</strong>")  # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞–≤—Ç–µ–ª—è
    bot.send_message(message.chat.id, f"<strong>–≠—Ç–æ —Ç–≥-–±–æ—Ç</strong> ü§ñ @Logic_testBot !\n"
                                      f"–¢—É—Ç –º–æ–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ—ë –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ!\n"
                                      f"–•–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ? –ñ–º–∏ –∫–Ω–æ–ø–∫—É '–í–∏–∫—Ç–æ—Ä–∏–Ω–∞'",
                                        reply_markup=murkup)  # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –∏ –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–∫–∏ "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞"


#----------------------------------------------------------------------
# –°–û–ë–°–¢–í–ï–ù–ù–û –í–ò–ö–¢–û–†–ò–ù–ê

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥—è—â–∞—è –≤–æ–ø—Ä–æ—Å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –Ω–µ–≥–æ
# –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –µ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (—Ç.–µ. –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è)
def send_question(chat_id):
    global user_data
    global question_number
    question_number = int(user_data[str(chat_id)]['question_number'])

    # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
    bot.send_message(chat_id, f'<strong>{survey[question_number]["number"]}). {survey[question_number]["question"]}</strong>')

    # –í—ã–≤–æ–¥–∏–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å
    murkup = ReplyKeyboardMarkup(resize_keyboard=True)
    button_list = [KeyboardButton(f'{answer}') for answer in survey[question_number]["answers"]]
    murkup.add(*button_list)
    for answer in survey[question_number]["answers"]:
        bot.send_message(chat_id, f'<strong>{answer}</strong>: <i>{survey[question_number]["answers"][answer]["text"]}</i>', reply_markup=murkup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: True)
def logic_test(message):
    global user_data
    global total_score
    global question_number

    chat_id = str(message.from_user.id)
    if chat_id not in user_data:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start")
        return

    if message.text.lower() == "–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞" or message.text.lower() == "–ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑?":
        total_score = 0   # –ó–∞–≤–æ–¥–∏–º —Å—á—ë—Ç—á–∏–∫
        user_data[chat_id]['total_score'] = str(total_score)
        user_data[chat_id]['question_number'] = 0
        send_question(chat_id)
    elif message.text.lower() == "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É":
        user_data = load_user_data()  # –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ–≥–æ json —Ñ–∞–π–ª–∞ (–≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
        send_question(chat_id)        # –∑–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        total_score = int(user_data[chat_id]['total_score'])  # –°—á–∏—Ç—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


#-------
#--------
#----------

    question_number = int(user_data[chat_id]['question_number'])
    answers = survey[question_number]["answers"]
    if message.text not in answers:
        bot.send_message(chat_id, f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤."
                                  f"–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ω–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞.")
        return

    total_score = int(user_data[chat_id]['total_score'])  # –°—á–∏—Ç—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–ø–∞–¥–∞–Ω–∏—è —Å–µ—Ç–∏ –∏–ª–∏ –ø–∞–¥–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
    total_score += int(survey[question_number]["answers"][message.text]["score"])
    user_data[chat_id]['question_number'] = int(user_data[chat_id]['question_number']) + 1

    user_data[chat_id]['total_score'] = str(total_score)  # –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–∞–Ω–Ω—ã–µ –æ—á–∫–æ–≤ –¥–ª—è –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ json —Ñ–∞–π–ª

    if question_number < (len(survey)-1):
        save_user_data(user_data) # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤ json
        send_question(chat_id)    # –≤—ã–≤–æ–¥–∏–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    else:
        bot.send_message(chat_id, f'<strong>ü§ñ –í—Å—ë!</strong>')
        # –í—ã–≤–æ–¥–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –≤ –∫–æ–Ω—Ü–µ –∞–Ω–∫–µ—Ç—ã
        bot.send_message(message.chat.id, f"<strong>–í—ã –Ω–∞–±—Ä–∞–ª–∏ {total_score} –±–∞–ª–ª–æ–≤.</strong>")
#        # –í—ã–≤–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä—É—é –ø–æ–ø–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if total_score >= 10:
            bot.send_message(message.chat.id, f"<strong>–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!\n–í–∞—à–∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –¥–µ–ª–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç—Ä—è—Å–∞—é—â–∞.\n–í–∞–º –ø–æ –∑—É–±–∞–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ª—é–±–æ–π ¬´–∫—Ä–µ–ø–∫–∏–π –æ—Ä–µ—à–µ–∫¬ª.</strong>")
        elif 5 <= total_score <= 9:
            bot.send_message(message.chat.id, "<strong>–° –ª–æ–≥–∏–∫–æ–π —É –≤–∞—Å –≤—Å–µ —Ö–æ—Ä–æ—à–æ.\n–û–¥–Ω–∞–∫–æ –ø–æ—Ä–æ–π –≤–∞–º —Ç—Ä—É–¥–Ω–æ –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ —Ç—Ä—É–¥–Ω–æ–≥–æ, –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.</strong>")
        else:
            bot.send_message(message.chat.id, "<strong>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ —É –≤–∞—Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ —Ä–∞–∑–≤–∏—Ç–æ.\n–ù–æ –Ω–µ —Å—Ç–æ–∏—Ç –æ—Ç—á–∞–∏–≤–∞—Ç—å—Å—è.\n–†–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ —Å–æ–±–æ–π –∏ —Ç–æ–≥–¥–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç–µ —É—Å–ø–µ—Ö–∞.</strong>")

        murkup = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        murkup.add("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑?")
        bot.send_message(message.chat.id, f"–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ—â—ë —Ä–∞–∑? –¢–æ–≥–¥–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å–ª–æ–≤–æ: –í–∏–∫—Ç–æ—Ä–∏–Ω–∞.",
                             reply_markup=murkup)  # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –∏ –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–∫–∏ "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞"


bot.polling(non_stop=True)



